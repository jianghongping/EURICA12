/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOMYDECAY
#define ROOMYDECAY

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class RooMyDecay : public RooAbsPdf {
public:
  RooMyDecay() {} ; 
  RooMyDecay(const char *name, const char *title,
	      RooAbsReal& _t,        //decay time (variable in the fitting)
	      RooAbsReal& _X0,       //initial activity 
	      RooAbsReal& _pn,       //Pn of parent
	      RooAbsReal& _p2n,      //P2n of parent
	      RooAbsReal& _t11,      //half-life of the ground state of parent
	      RooAbsReal& _t12,      //half-life of the beta-decaying isomer of parent (set to 0 if not exist)
	      RooAbsReal& _pnd,      //neutron emission of daughter
	      RooAbsReal& _t21,      //half-life of the ground state of daughter
	      RooAbsReal& _t22,      //half-life of the beta-decaying isomer of daughter (set to 0 if not exist)
	      RooAbsReal& _t31,      //half-life of the ground state of grand-daughter
	      RooAbsReal& _t32,      //half-life of the beta-decaying isomer of grand-daughter (set to 0 if not exist)
	      RooAbsReal& _pnbnd,    //Pn of beta-n daughter
	      RooAbsReal& _t51,      //half-life of the ground state of beta-n daughter
	      RooAbsReal& _t52,      //half-life of the beta-decaying isomer of beta-n daughter (set to 0 if not exist)
	      RooAbsReal& _t61,      //half-life of the ground state of beta-n grand-daughter
	      RooAbsReal& _t62,      //half-life of the beta-decaying isomer of beta-n grand daughter (set to 0 if not exist)
	      RooAbsReal& _t81,      //half-life of the ground state of beta-2n daughter
	      RooAbsReal& _t82,      //half-life of the beta-decaying isomer of beta-2n daughter (set to 0 if not exist)
	      RooAbsReal& _bg,       //constatn background
	      RooAbsReal& _p12,      //isomeric ratio of parent
	      RooAbsReal& _p22,      //isomeric ratio of daughter
	      RooAbsReal& _p32,      //isomeric ratio of grand-daughter
	      RooAbsReal& _p52,      //isomeric ratio of beta-n daughter
	      RooAbsReal& _p62,      //isomeric ratio of beta-n grand-daughter
	      RooAbsReal& _p82);     //isomeric ratio of beta-2n daughter
  RooMyDecay(const RooMyDecay& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooMyDecay(*this,newname); }
  inline virtual ~RooMyDecay() { }

protected:

  RooRealProxy t ;
  RooRealProxy X0 ;
  RooRealProxy pn ;
  RooRealProxy p2n ;
  RooRealProxy t11 ;
  RooRealProxy t12 ;
  RooRealProxy pnd ;
  RooRealProxy t21 ;
  RooRealProxy t22 ;
  RooRealProxy t31 ;
  RooRealProxy t32 ;
  RooRealProxy pnbnd ;
  RooRealProxy t51 ;
  RooRealProxy t52 ;
  RooRealProxy t61 ;
  RooRealProxy t62 ;
  RooRealProxy t81 ;
  RooRealProxy t82 ;
  RooRealProxy bg ;
  RooRealProxy p12 ;
  RooRealProxy p22 ;
  RooRealProxy p32 ;
  RooRealProxy p52 ;
  RooRealProxy p62 ;
  RooRealProxy p82 ;
  
  Double_t evaluate() const ;
  Double_t decay_background() const ;
  Double_t decay_parent() const ;
  Double_t decay_daughter() const ;
  Double_t decay_gdaughter() const ;
  Double_t decay_bndaughter() const ;
  Double_t decay_bngdaughter() const ;
  Double_t decay_b2ndaughter()const ;

private:

  ClassDef(RooMyDecay,1) // Your description goes here...
};
 
#endif
