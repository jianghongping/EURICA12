/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooMyDecay.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooMyDecay) 

   RooMyDecay::RooMyDecay(const char *name, const char *title, 
         RooAbsReal& _t,
         RooAbsReal& _X0,
         RooAbsReal& _pn,
         RooAbsReal& _p2n,
         RooAbsReal& _t11,
         RooAbsReal& _t12,
         RooAbsReal& _pnd,
         RooAbsReal& _t21,
         RooAbsReal& _t22,
         RooAbsReal& _t31,
         RooAbsReal& _t32,
         RooAbsReal& _pnbnd,
         RooAbsReal& _t51,
         RooAbsReal& _t52,
         RooAbsReal& _t61,
         RooAbsReal& _t62,
         RooAbsReal& _t81,
         RooAbsReal& _t82,
         RooAbsReal& _bg,
         RooAbsReal& _p12,
         RooAbsReal& _p22,
         RooAbsReal& _p32,
         RooAbsReal& _p52,
         RooAbsReal& _p62,
         RooAbsReal& _p82) :
      RooAbsPdf(name,title), 
      t("t","t",this,_t),
      X0("X0","X0",this,_X0),
      pn("pn","pn",this,_pn),
      p2n("p2n","p2n",this,_p2n),
      t11("t11","t11",this,_t11),
      t12("t12","t12",this,_t12),
      pnd("pnd","pnd",this,_pnd),
      t21("t21","t21",this,_t21),
      t22("t22","t22",this,_t22),
      t31("t31","t31",this,_t31),
      t32("t32","t32",this,_t32),
      pnbnd("pnbnd","pnbnd",this,_pnbnd),
      t51("t51","t51",this,_t51),
      t52("t52","t52",this,_t52),
      t61("t61","t61",this,_t61),
      t62("t62","t62",this,_t62),
      t81("t81","t81",this,_t81),
      t82("t82","t82",this,_t82),
      bg("bg","bg",this,_bg),
      p12("p12","p12",this,_p12),
      p22("p22","p22",this,_p22),
      p32("p32","p32",this,_p32),
      p52("p52","p52",this,_p52),
      p62("p62","p62",this,_p62),
      p82("p82","p82",this,_p82)
{
}


RooMyDecay::RooMyDecay(const RooMyDecay& other, const char* name) :  
   RooAbsPdf(other,name), 
   t("t",this,other.t),
   X0("X0",this,other.X0),
   pn("pn",this,other.pn),
   p2n("p2n",this,other.p2n),
   t11("t11",this,other.t11),
   t12("t12",this,other.t12),
   pnd("pnd",this,other.pnd),
   t21("t21",this,other.t21),
   t22("t22",this,other.t22),
   t31("t31",this,other.t31),
   t32("t32",this,other.t32),
   pnbnd("pnbnd",this,other.pnbnd),
   t51("t51",this,other.t51),
   t52("t52",this,other.t52),
   t61("t61",this,other.t61),
   t62("t62",this,other.t62),
   t81("t81",this,other.t81),
   t82("t82",this,other.t82),
   bg("bg",this,other.bg),
   p12("p12",this,other.p12),
   p22("p22",this,other.p22),
   p32("p32",this,other.p32),
   p52("p52",this,other.p52),
   p62("p62",this,other.p62),
   p82("p82",this,other.p82)
{
}

Double_t RooMyDecay::decay_background() const
{
   return bg;
}

Double_t RooMyDecay::decay_parent() const
{
   Double_t result;
   Double_t t1[2], p1[2];
   Double_t l1;
   t1[0]=t11;
   t1[1]=t12;
   p1[0]=1-p12;
   p1[1]=p12;
   result = 0;
   for(int i=0; i<2; i++){
      if(t1[i]>0){
         l1=log(2)/t1[i];
         Double_t temp;
         temp = TMath::Exp(-1*l1*t)*p1[i];
         result = result + temp;
      }
   }
   return result*X0;
}

Double_t RooMyDecay::decay_daughter() const
{
   Double_t result;
   Double_t t1[2], p1[2], t2[2], p2[2];
   Double_t l1, l2;
   Double_t pb=1-pn-p2n;
   t1[0]=t11;
   t1[1]=t12;
   t2[0]=t21;
   t2[1]=t22;
   p1[0]=1-p12;
   p1[1]=p12;
   p2[0]=1-p22;
   p2[1]=p22;
   result = 0;
   for(int i=0; i<2; i++){
      for(int j=0; j<2; j++){
         if(t1[i]>0 && t2[j]>0 && t1[i]!=t2[j]){
            l1=log(2)/t1[i];
            l2=log(2)/t2[j];
            Double_t temp;
            temp = l2*(TMath::Exp(-1*l1*t)/(l2-l1)+TMath::Exp(-1*l2*t)/(l1-l2))*p1[i]*p2[j];
            result = result + temp;
         }
      }
   }
   return X0*pb*result;
}

Double_t RooMyDecay::decay_gdaughter() const
{
   Double_t result;
   Double_t t1[2], p1[2], t2[2], p2[2], t3[2], p3[2];
   Double_t l1, l2, l3;
   Double_t pb=1-pn-p2n;
   Double_t pbd=1-pnd;
   t1[0]=t11;
   t1[1]=t12;
   t2[0]=t21;
   t2[1]=t22;
   t3[0]=t31;
   t3[1]=t32;
   p1[0]=1-p12;
   p1[1]=p12;
   p2[0]=1-p22;
   p2[1]=p22;
   p3[0]=1-p32;
   p3[1]=p32;
   result = 0;
   for(int i=0; i<2; i++){
      for(int j=0; j<2; j++){
         for(int k=0; k<2; k++){
            if(t1[i]>0 && t2[j]>0 && t3[k]>0 && t1[i]!=t2[j] && t1[i]!=t3[k] && t2[j]!=t3[k]){
               l1=log(2)/t1[i];
               l2=log(2)/t2[j];
               l3=log(2)/t3[k];
               Double_t temp;
               temp = l2*l3*(TMath::Exp(-1*l1*t)/(l2-l1)/(l3-l1)+TMath::Exp(-1*l2*t)/(l1-l2)/(l3-l2)+TMath::Exp(-1*l3*t)/(l1-l3)/(l2-l3))*p1[i]*p2[j]*p3[k];
               result = result + temp;
            }
         }
      }
   }
   return X0*pb*pbd*result;
}

Double_t RooMyDecay::decay_bndaughter() const
{
   Double_t result;
   Double_t t1[2], p1[2], t5[2], p5[2];
   Double_t l1, l5;
   t1[0]=t11;
   t1[1]=t12;
   t5[0]=t51;
   t5[1]=t52;
   p1[0]=1-p12;
   p1[1]=p12;
   p5[0]=1-p52;
   p5[1]=p52;
   result = 0;
   for(int i=0; i<2; i++){
      for(int j=0; j<2; j++){
         if(t1[i]>0 && t5[j]>0 && t1[i]!=t5[j]){
            l1=log(2)/t1[i];
            l5=log(2)/t5[j];
            Double_t temp;
            temp = l5*(TMath::Exp(-1*l1*t)/(l5-l1)+TMath::Exp(-1*l5*t)/(l1-l5))*p1[i]*p5[j];
            result = result + temp;
         }
      }
   }
   //cout<<X0*pn*result<<endl;
   return X0*pn*result;
}

Double_t RooMyDecay::decay_bngdaughter() const
{
   Double_t result;
   Double_t t1[2], p1[2], t2[2], p2[2], t5[2], p5[2], t6[2], p6[2];
   Double_t l1, l2, l5, l6;
   t1[0]=t11;
   t1[1]=t12;
   t2[0]=t21;
   t2[1]=t22;
   t5[0]=t51;
   t5[1]=t52;
   t6[0]=t61;
   t6[1]=t62;
   p1[0]=1-p12;
   p1[1]=p12;
   p2[0]=1-p22;
   p2[1]=p22;
   p5[0]=1-p52;
   p5[1]=p52;
   p6[0]=1-p62;
   p6[1]=p62;
   Double_t pb=1-pn-p2n;
   Double_t pbbnd=1-pnbnd;
   result = 0;
   for(int i=0; i<2; i++){
      for(int j=0; j<2; j++){
         for(int k=0; k<2; k++){
            if(t1[i]>0 && t5[j]>0 && t6[k]>0 && t1[i]!=t5[j] && t1[i]!=t6[k] && t5[j]!=t6[k]){
               l1=log(2)/t1[i];
               l5=log(2)/t5[j];
               l6=log(2)/t6[k];
               Double_t temp;
               temp = l5*l6*(TMath::Exp(-1*l1*t)/(l5-l1)/(l6-l1)+TMath::Exp(-1*l5*t)/(l1-l5)/(l6-l5)+TMath::Exp(-1*l6*t)/(l1-l6)/(l5-l6))*p1[i]*p5[j]*p6[k];
               result = result + pn*pbbnd*temp;
            }
         }
      }
   }
   for(int i=0; i<2; i++){
      for(int j=0; j<2; j++){
         for(int k=0; k<2; k++){
            if(t1[i]>0 && t2[j]>0 && t6[k]>0 && t1[i]!=t2[j] && t1[i]!=t6[k] && t2[j]!=t6[k]){
               l1=log(2)/t1[i];
               l2=log(2)/t2[j];
               l6=log(2)/t6[k];
               Double_t temp;
               temp = l2*l6*(TMath::Exp(-1*l1*t)/(l2-l1)/(l6-l1)+TMath::Exp(-1*l2*t)/(l1-l2)/(l6-l2)+TMath::Exp(-1*l6*t)/(l1-l6)/(l2-l6))*p1[i]*p2[j]*p6[k];
               result = result + pb*pnd*temp;
            }
         }
      }
   }
   return X0*result;
}

Double_t RooMyDecay::decay_b2ndaughter() const
{
   Double_t result;
   Double_t t1[2], p1[2], t8[2], p8[2];
   Double_t l1, l8;
   t1[0]=t11;
   t1[1]=t12;
   t8[0]=t81;
   t8[1]=t82;
   p1[0]=1-p12;
   p1[1]=p12;
   p8[0]=1-p82;
   p8[1]=p82;
   result = 0;
   for(int i=0; i<2; i++){
      for(int j=0; j<2; j++){
         if(t1[i]>0 && t8[j]>0 && t1[i]!=t8[j]){
            l1=log(2)/t1[i];
            l8=log(2)/t8[j];
            Double_t temp;
            temp = l8*(TMath::Exp(-1*l1*t)/(l8-l1)+TMath::Exp(-1*l8*t)/(l1-l8))*p1[i]*p8[j];
            result = result + temp;
         }
      }
   }
   return X0*p2n*result;
}

Double_t RooMyDecay::evaluate() const 
{
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   if(pn+p2n<=1 && X0>0 && t11>0){
      return decay_background()+decay_parent()+decay_daughter()+decay_gdaughter()+decay_bndaughter()+decay_bngdaughter()+decay_b2ndaughter();
   }else{
      return 0;
   }
}
